/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sis_exchange;

import Controlador.CRUD_Caja;
import Controlador.CRUD_Moneda;
import Controlador.CRUD_OperacionMoneda;
import Controlador.CRUD_USUARIO;
import Entidades.Caja;
import Entidades.Moneda;
import Entidades.OperacionMoneda;
import Entidades.Usuario;
import Utilidades.Exporter;
import java.io.File;
import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class FormGestionTransacciones extends javax.swing.JDialog {

    /**
     * Creates new form FormGestionTransacciones
     */
    public DefaultTableModel dtm = null;
    private Date fecha;
    public FormGestionTransacciones(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dtm = (DefaultTableModel) tblTransacciones.getModel();
        try {
            CargarComboCajas();
            CargarComboMonedas();
            CargarComboUsuario();
            VerDatos(1, "", "", "", "", "");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormGestionTransacciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormGestionTransacciones.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupo = new javax.swing.ButtonGroup();
        panelSuperior = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        etiFecha = new javax.swing.JLabel();
        dateFecha = new datechooser.beans.DateChooserCombo();
        etiMoneda = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox<>();
        etiCaja = new javax.swing.JLabel();
        cmbCaja = new javax.swing.JComboBox<>();
        etiOperacion = new javax.swing.JLabel();
        cmbOperacion = new javax.swing.JComboBox<>();
        etiUsuario = new javax.swing.JLabel();
        cmbUsuario = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        rbtnFcha = new javax.swing.JRadioButton();
        rbtnCompras = new javax.swing.JRadioButton();
        rbtnTodo = new javax.swing.JRadioButton();
        panelCentro = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTransacciones = new javax.swing.JTable();
        panelInferior = new javax.swing.JPanel();
        btnExportar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de transacciones");
        setPreferredSize(new java.awt.Dimension(1200, 550));

        panelSuperior.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));
        panelSuperior.setLayout(new java.awt.GridLayout(2, 0));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        etiFecha.setText("Fecha:");
        etiFecha.setEnabled(false);
        jPanel1.add(etiFecha);

        dateFecha.setEnabled(false);
        dateFecha.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                dateFechaOnSelectionChange(evt);
            }
        });
        jPanel1.add(dateFecha);

        etiMoneda.setText("Moneda:");
        etiMoneda.setEnabled(false);
        jPanel1.add(etiMoneda);

        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMoneda.setEnabled(false);
        cmbMoneda.setPreferredSize(new java.awt.Dimension(150, 23));
        cmbMoneda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonedaItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbMoneda);

        etiCaja.setText("Caja:");
        etiCaja.setEnabled(false);
        jPanel1.add(etiCaja);

        cmbCaja.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCaja.setEnabled(false);
        cmbCaja.setPreferredSize(new java.awt.Dimension(150, 23));
        cmbCaja.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCajaItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbCaja);

        etiOperacion.setText("Operacion:");
        etiOperacion.setEnabled(false);
        jPanel1.add(etiOperacion);

        cmbOperacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMPRA", "VENTA" }));
        cmbOperacion.setEnabled(false);
        cmbOperacion.setPreferredSize(new java.awt.Dimension(90, 23));
        cmbOperacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOperacionItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbOperacion);

        etiUsuario.setText("Usuario:");
        etiUsuario.setEnabled(false);
        jPanel1.add(etiUsuario);

        cmbUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbUsuario.setEnabled(false);
        cmbUsuario.setPreferredSize(new java.awt.Dimension(100, 23));
        cmbUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbUsuarioItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbUsuario);

        panelSuperior.add(jPanel1);

        btnGrupo.add(rbtnFcha);
        rbtnFcha.setText("por Fecha");
        rbtnFcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnFchaActionPerformed(evt);
            }
        });
        jPanel2.add(rbtnFcha);

        btnGrupo.add(rbtnCompras);
        rbtnCompras.setText("por columnas");
        rbtnCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnComprasActionPerformed(evt);
            }
        });
        jPanel2.add(rbtnCompras);

        btnGrupo.add(rbtnTodo);
        rbtnTodo.setSelected(true);
        rbtnTodo.setText("ninguna");
        rbtnTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnTodoActionPerformed(evt);
            }
        });
        jPanel2.add(rbtnTodo);

        panelSuperior.add(jPanel2);

        getContentPane().add(panelSuperior, java.awt.BorderLayout.PAGE_START);

        panelCentro.setLayout(new java.awt.BorderLayout());

        tblTransacciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "N OPERACION", "FECHA", "HORA", "OPERACION", "MONEDA", "IMPORTE", "T/C", "SALDO", "CAJA", "USUARIO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTransacciones);

        panelCentro.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelCentro, java.awt.BorderLayout.CENTER);

        panelInferior.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        panelInferior.add(btnExportar);

        btnGuardar.setText("Guardar");
        panelInferior.add(btnGuardar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        panelInferior.add(btnEliminar);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panelInferior.add(btnCancelar);

        getContentPane().add(panelInferior, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int fila=0; int id;
        OperacionMoneda opm = new OperacionMoneda();
        fila = tblTransacciones.getSelectedRow();
        id = Integer.parseInt(tblTransacciones.getValueAt(fila, 0).toString());
        opm.setIdOperacion(id);
        // Consultamos si se eliminara el registro al usuario
        int resp = JOptionPane.showConfirmDialog(null, "¿Esta seguro de eliminar la transacion seleccionada?", "Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (resp == 0) {
            try {
                if (CRUD_OperacionMoneda.Eliminar(opm)) {
                    JOptionPane.showMessageDialog(rootPane, "Se ha eliminado correctamente el registro seleccionado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    rbtnTodo.isSelected();
                    estadofiltro(false);
                    VerDatos(1, "", "", "", "", "");
                    //Atualizamos la venta de transacciones
                    FormViewTransacciones.VerDatos();
                    //Actualizamos la venta de saldos
                    FormViewSaldos.VerDatos(FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja));
                    //Actualizamos la venta operaciones
                    FormOperacionCambio.getSaldoBolivianos();
                    FormOperacionCambio.getSaldoDolares();
                    
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se pudo eliminar el registro seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println("Error"+e);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void rbtnComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnComprasActionPerformed
        // TODO add your handling code here:
        estadofiltro(true);
        filtrardatos();
        
    }//GEN-LAST:event_rbtnComprasActionPerformed

    private void rbtnTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnTodoActionPerformed
        // TODO add your handling code here:
        estadofiltro(false);
        try {
            VerDatos(1, "", "", "", "", "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rbtnTodoActionPerformed

    private void dateFechaOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dateFechaOnSelectionChange
        // TODO add your handling code here:
        filtrardatos();
    }//GEN-LAST:event_dateFechaOnSelectionChange

    private void cmbMonedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonedaItemStateChanged
        // TODO add your handling code here:
        filtrardatos();
    }//GEN-LAST:event_cmbMonedaItemStateChanged

    private void cmbCajaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCajaItemStateChanged
        // TODO add your handling code here:
        filtrardatos();
    }//GEN-LAST:event_cmbCajaItemStateChanged

    private void cmbOperacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOperacionItemStateChanged
        // TODO add your handling code here:
        filtrardatos();
    }//GEN-LAST:event_cmbOperacionItemStateChanged

    private void cmbUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbUsuarioItemStateChanged
        // TODO add your handling code here:
        filtrardatos();
    }//GEN-LAST:event_cmbUsuarioItemStateChanged

    private void rbtnFchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnFchaActionPerformed
        // TODO add your handling code here:
        estadofiltro(false);
        etiFecha.setEnabled(true);
        dateFecha.setEnabled(true);
        fecha = new java.sql.Date(dateFecha.getSelectedDate().getTimeInMillis());
        System.out.println("Fecha seleccionada:"+fecha.toString());
        try {
            VerDatos(2, fecha.toString(), "", "", "", "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rbtnFchaActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        // TODO add your handling code here:
        if (tblTransacciones.getRowCount() > 0) {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Guardar archivo");
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                List tb = new ArrayList();
                List nom = new ArrayList();
                tb.add(tblTransacciones);
                nom.add("Compras por factura");
                String file = chooser.getSelectedFile().toString().concat(".xls");
                try {
                    Exporter e = new Exporter(new File(file), tb, nom);
                    if (e.export()) {
                        JOptionPane.showMessageDialog(null, "Los datos fueron exportados a excel en el directorio seleccionado", "Mensaje de Informacion", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Hubo un error " + e.getMessage(), " Error", JOptionPane.ERROR_MESSAGE);
                }
                }
                }else{
                    JOptionPane.showMessageDialog(this, "No hay datos para exportar","Mensaje de error",JOptionPane.ERROR_MESSAGE);
                }
    }//GEN-LAST:event_btnExportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormGestionTransacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormGestionTransacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormGestionTransacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormGestionTransacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormGestionTransacciones dialog = new FormGestionTransacciones(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Funcion que muestra los datos de los registros
    private void VerDatos(int tipoconsulta,String fecha,String moneda, String idcaja, String idusuario, String operacion) throws ClassNotFoundException, SQLException {
        int idCajaAct=0;
        idCajaAct = FORM_PRINCIPAL.idcaja;
        try {
            int nf = tblTransacciones.getRowCount();
            for (int i = 0; i < nf; i++) {
                dtm.removeRow(0);
            }
            for (Object[] o : CRUD_OperacionMoneda.ListaFiltroTransacciones(tipoconsulta,fecha,moneda,idcaja,idusuario,operacion)) {
                dtm.addRow(o);
            }
            tblTransacciones.setRowSelectionInterval(tblTransacciones.getRowCount()-1, tblTransacciones.getRowCount()-1);
            jScrollPane2.getVerticalScrollBar().setValue(jScrollPane2.getVerticalScrollBar().getMaximum());
        } catch (Exception e) {
            System.err.println("Erro"+e);
        }
    }
    //Funcion que carga el combobox con la lista de monedas
    public void CargarComboMonedas() throws ClassNotFoundException, SQLException {
        
        cmbMoneda.removeAllItems();
        for (Moneda m : CRUD_Moneda.ListarporMoneda()) {
            cmbMoneda.addItem(m.getNombre());
        }
        
    }
    //Funcion que carga el combobox con la lista de cajas
    public void CargarComboCajas() throws ClassNotFoundException, SQLException {
        
        cmbCaja.removeAllItems();
        for (Caja c : CRUD_Caja.ListarporCaja()) {
            cmbCaja.addItem(c.getDescripcion());
        }
        
    }
    //Funcion que carga el combobox con la lista de usuarios registrados en el sistema
    public void CargarComboUsuario() throws ClassNotFoundException, SQLException{
        cmbUsuario.removeAllItems();
        for (Object[] u : CRUD_USUARIO.ListaUsuarios()) {
            cmbUsuario.addItem(u[1].toString());            
        }
    }
    public void estadofiltro(boolean estado){
        etiFecha.setEnabled(estado);
        dateFecha.setEnabled(estado);
        etiMoneda.setEnabled(estado);
        cmbMoneda.setEnabled(estado);
        etiCaja.setEnabled(estado);
        cmbCaja.setEnabled(estado);
        etiOperacion.setEnabled(estado);
        cmbOperacion.setEnabled(estado);
        etiUsuario.setEnabled(estado);
        cmbUsuario.setEnabled(estado);
    }
    public void filtrardatos(){
        fecha = new java.sql.Date(dateFecha.getSelectedDate().getTimeInMillis());
        try {
            VerDatos(0, fecha.toString(), cmbMoneda.getSelectedItem().toString(), ""+CRUD_Caja.getidCaja(cmbCaja.getSelectedItem().toString()), ""+CRUD_USUARIO.ObtenerID(cmbUsuario.getSelectedItem().toString()), cmbOperacion.getSelectedItem().toString());
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExportar;
    private javax.swing.ButtonGroup btnGrupo;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cmbCaja;
    private javax.swing.JComboBox<String> cmbMoneda;
    private javax.swing.JComboBox<String> cmbOperacion;
    private javax.swing.JComboBox<String> cmbUsuario;
    private datechooser.beans.DateChooserCombo dateFecha;
    private javax.swing.JLabel etiCaja;
    private javax.swing.JLabel etiFecha;
    private javax.swing.JLabel etiMoneda;
    private javax.swing.JLabel etiOperacion;
    private javax.swing.JLabel etiUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelCentro;
    private javax.swing.JPanel panelInferior;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JRadioButton rbtnCompras;
    private javax.swing.JRadioButton rbtnFcha;
    private javax.swing.JRadioButton rbtnTodo;
    private javax.swing.JTable tblTransacciones;
    // End of variables declaration//GEN-END:variables
}
