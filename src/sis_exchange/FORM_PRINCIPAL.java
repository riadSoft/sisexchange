/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sis_exchange;

import Controlador.CRUD_Caja;
import Controlador.CRUD_USUARIO;
import Controlador.Conexion_BDD;
import Utilidades.Codigo_Control.frmGenerarControlCodigo;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

public class FORM_PRINCIPAL extends javax.swing.JFrame {

    public static JOptionPane jp = new JOptionPane();
    public static int idcaja = 0;
    private Thread t;
    private boolean activar = false;
    private int segundo, minuto, hora, centesima;
    private Conexion_BDD con = new Conexion_BDD();

    public FORM_PRINCIPAL(int idCaja) {
        initComponents();
        // Obtenemos el usuario logeado
        idcaja = idCaja;
        try {
            etiUsuario.setText("Usuario: " + CRUD_USUARIO.ObtenerUser(Ingreso.idusuario));
            if (CRUD_Caja.getEstadoCaja(idcaja) == 1) {
                iniciar(true, CRUD_Caja.getNombreCaja(idcaja), CRUD_Caja.getFechaApertura(idcaja).toString());
                empezar();
                t.start();
            } else {
                if (Ingreso.idusuario == 1) {

                    jmCerrarCaja.setEnabled(false);
                    jmGestionCajas.setEnabled(true);
                    jmGestionMonedas.setEnabled(true);
                    jmGestionSaldos.setEnabled(true);
                }
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pfondo = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        etiUsuario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        etiCaja = new javax.swing.JLabel();
        etiTiempo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmAbrirCaja = new javax.swing.JMenuItem();
        jmCerrarCaja = new javax.swing.JMenuItem();
        jmGestionMonedas = new javax.swing.JMenuItem();
        jmGestionCajas = new javax.swing.JMenuItem();
        jmGestionSaldos = new javax.swing.JMenuItem();
        jmGestionUsuarios = new javax.swing.JMenuItem();
        jmSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmOperacionCambios = new javax.swing.JMenuItem();
        jmOperacionMovimientoCaja = new javax.swing.JMenuItem();
        jmGestionTransacciones = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jmTransaccionesDia = new javax.swing.JMenuItem();
        jmArqueoDia = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jmOpciones = new javax.swing.JMenuItem();
        jmPruebasCodigoControl = new javax.swing.JMenuItem();
        jmvregTransacciones = new javax.swing.JMenu();
        jmVerSaldos = new javax.swing.JCheckBoxMenuItem();
        jmVerCambios = new javax.swing.JCheckBoxMenuItem();
        jmVerRegistroTransacciones = new javax.swing.JCheckBoxMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Cambios V. 1.0.2018");
        getContentPane().add(pfondo, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        etiUsuario.setText("Usuario:");
        jPanel1.add(etiUsuario, java.awt.BorderLayout.WEST);
        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        etiCaja.setText("Caja sin abrir...");
        jPanel3.add(etiCaja);

        etiTiempo.setText("Tiempo: 00:00");
        jPanel3.add(etiTiempo);

        jPanel1.add(jPanel3, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jMenu1.setText("Inicio");

        jmAbrirCaja.setText("Abrir Caja");
        jmAbrirCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAbrirCajaActionPerformed(evt);
            }
        });
        jMenu1.add(jmAbrirCaja);

        jmCerrarCaja.setText("Cerrar Caja");
        jmCerrarCaja.setEnabled(false);
        jmCerrarCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCerrarCajaActionPerformed(evt);
            }
        });
        jMenu1.add(jmCerrarCaja);

        jmGestionMonedas.setText("Monedas");
        jmGestionMonedas.setEnabled(false);
        jmGestionMonedas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmGestionMonedasActionPerformed(evt);
            }
        });
        jMenu1.add(jmGestionMonedas);

        jmGestionCajas.setText("Cajas");
        jmGestionCajas.setEnabled(false);
        jmGestionCajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmGestionCajasActionPerformed(evt);
            }
        });
        jMenu1.add(jmGestionCajas);

        jmGestionSaldos.setText("Saldos");
        jmGestionSaldos.setEnabled(false);
        jmGestionSaldos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmGestionSaldosActionPerformed(evt);
            }
        });
        jMenu1.add(jmGestionSaldos);

        jmGestionUsuarios.setText("Usuarios");
        jmGestionUsuarios.setEnabled(false);
        jmGestionUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmGestionUsuariosActionPerformed(evt);
            }
        });
        jMenu1.add(jmGestionUsuarios);

        jmSalir.setText("Salir");
        jmSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSalirActionPerformed(evt);
            }
        });
        jMenu1.add(jmSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Transacciones");

        jmOperacionCambios.setText("Compra/Venta de moneda");
        jmOperacionCambios.setEnabled(false);
        jmOperacionCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmOperacionCambiosActionPerformed(evt);
            }
        });
        jMenu2.add(jmOperacionCambios);

        jmOperacionMovimientoCaja.setText("Ingreso/ Egresos de caja");
        jmOperacionMovimientoCaja.setEnabled(false);
        jmOperacionMovimientoCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmOperacionMovimientoCajaActionPerformed(evt);
            }
        });
        jMenu2.add(jmOperacionMovimientoCaja);

        jmGestionTransacciones.setText("Gestion de Transacciones");
        jmGestionTransacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmGestionTransaccionesActionPerformed(evt);
            }
        });
        jMenu2.add(jmGestionTransacciones);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Reportes");

        jMenuItem3.setText("por fecha");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenu7.setText("de Caja");

        jmTransaccionesDia.setText("Transacciones");
        jmTransaccionesDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmTransaccionesDiaActionPerformed(evt);
            }
        });
        jMenu7.add(jmTransaccionesDia);

        jmArqueoDia.setText("Arqueo de Caja");
        jmArqueoDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmArqueoDiaActionPerformed(evt);
            }
        });
        jMenu7.add(jmArqueoDia);

        jMenuItem1.setText("Utilidad");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem1);

        jMenu4.add(jMenu7);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Herramientas");

        jmOpciones.setText("Opciones");
        jmOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmOpcionesActionPerformed(evt);
            }
        });
        jMenu5.add(jmOpciones);

        jmPruebasCodigoControl.setText("Pruebas codigo de control");
        jmPruebasCodigoControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmPruebasCodigoControlActionPerformed(evt);
            }
        });
        jMenu5.add(jmPruebasCodigoControl);

        jMenuBar1.add(jMenu5);

        jmvregTransacciones.setText("Ver");

        jmVerSaldos.setSelected(true);
        jmVerSaldos.setText("Ventana Saldos");
        jmVerSaldos.setEnabled(false);
        jmVerSaldos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmVerSaldosActionPerformed(evt);
            }
        });
        jmvregTransacciones.add(jmVerSaldos);

        jmVerCambios.setSelected(true);
        jmVerCambios.setText("Ventana T/C Monedas");
        jmVerCambios.setEnabled(false);
        jmVerCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmVerCambiosActionPerformed(evt);
            }
        });
        jmvregTransacciones.add(jmVerCambios);

        jmVerRegistroTransacciones.setSelected(true);
        jmVerRegistroTransacciones.setText("Venta Registor de transacciones");
        jmVerRegistroTransacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmVerRegistroTransaccionesActionPerformed(evt);
            }
        });
        jmvregTransacciones.add(jmVerRegistroTransacciones);

        jMenuBar1.add(jmvregTransacciones);

        jMenu6.setText("Ayuda");

        jMenuItem11.setText("Acerca de");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem11);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);
        jMenuBar1.getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static void Centrar(JDesktopPane fondo, JInternalFrame from) {
        Dimension tamaño_fondo = fondo.getSize();
        Dimension tamaño_vi = from.getSize();
        from.setLocation((tamaño_fondo.width - tamaño_vi.width) / 2, (tamaño_fondo.height - tamaño_fondo.height) / 2 + 30);
    }

    public static void iniciar(boolean estado, String caja, String fecha) {
        jmAbrirCaja.setEnabled(false);
        FormViewMonedas fvm = new FormViewMonedas();
        FormViewSaldos fvs = new FormViewSaldos();
        FormViewTransacciones fvt = new FormViewTransacciones();
        FormOperacionCambio foc = new FormOperacionCambio();

        etiCaja.setText(caja + " iniciada el " + fecha + " | ");

        ControlaInstancia(fvt);
        PosicionVentana(fvt, 3, 3, -80, 50, 0, 0);

        ControlaInstancia(fvs);
        PosicionVentana(fvs, 4, 3, 50, 50, 0, 1);

        ControlaInstancia(fvm);
        PosicionVentana(fvm, 4, 3, 50, 50, 0, 2);

        ControlaInstancia(foc);
        PosicionVentana(foc, 2, 2, 30, -250, 1, 0);

        if (Ingreso.idusuario == 1) {
            jmCerrarCaja.setEnabled(estado);
            jmGestionCajas.setEnabled(estado);
            jmGestionMonedas.setEnabled(estado);
            jmGestionSaldos.setEnabled(estado);
            jmGestionUsuarios.setEnabled(estado);
            jmOperacionCambios.setEnabled(estado);
            jmOperacionMovimientoCaja.setEnabled(estado);
            jmVerCambios.setEnabled(estado);
            jmVerSaldos.setEnabled(estado);
        } else {
            jmCerrarCaja.setEnabled(estado);
            jmGestionCajas.setEnabled(false);
            jmGestionMonedas.setEnabled(false);
            jmGestionSaldos.setEnabled(false);
            jmGestionUsuarios.setEnabled(false);
            jmOperacionCambios.setEnabled(estado);
            jmOperacionMovimientoCaja.setEnabled(estado);
            jmVerCambios.setEnabled(estado);
            jmVerSaldos.setEnabled(estado);
        }
    }

    public static void cerrar() {

        // Cerramos todos las ventanas activas en el contenedor del Jdekskpane
        JInternalFrame v[] = pfondo.getAllFrames();
        for (int i = 0; i < v.length; i++) {
            v[i].dispose();
        }
        jmCerrarCaja.setEnabled(false);
        jmAbrirCaja.setEnabled(true);
        jmGestionCajas.setEnabled(false);
        jmGestionMonedas.setEnabled(false);
        jmGestionSaldos.setEnabled(false);
        jmGestionUsuarios.setEnabled(false);
        jmOperacionCambios.setEnabled(false);
        jmOperacionMovimientoCaja.setEnabled(false);
        jmVerCambios.setEnabled(false);
        jmVerSaldos.setEnabled(false);

        etiCaja.setText(" La caja fue cerrada...  | ");

    }

    private void jmAbrirCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAbrirCajaActionPerformed

        FormInicioCaja fini = new FormInicioCaja(this, true);
        fini.setLocationRelativeTo(this);
        fini.setVisible(true);
    }//GEN-LAST:event_jmAbrirCajaActionPerformed

    private void jmCerrarCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCerrarCajaActionPerformed
        FormCierreCajaDia fcc = new FormCierreCajaDia(this,true);
        fcc.setLocationRelativeTo(this);
        fcc.setVisible(true);
        
    }//GEN-LAST:event_jmCerrarCajaActionPerformed

    private void jmGestionMonedasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmGestionMonedasActionPerformed

        FormGesionMoneda fm = new FormGesionMoneda();
        ControlaInstancia(fm);

    }//GEN-LAST:event_jmGestionMonedasActionPerformed

    private void jmGestionCajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmGestionCajasActionPerformed

        FormGestionCaja fc = new FormGestionCaja();
        ControlaInstancia(fc);

    }//GEN-LAST:event_jmGestionCajasActionPerformed

    private void jmGestionSaldosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmGestionSaldosActionPerformed

        FormDetalleCaja fdc = new FormDetalleCaja();
        fdc.setVisible(true);

    }//GEN-LAST:event_jmGestionSaldosActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed

    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jmOperacionCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmOperacionCambiosActionPerformed

        FormOperacionCambio foc = new FormOperacionCambio();
        ControlaInstancia(foc);

    }//GEN-LAST:event_jmOperacionCambiosActionPerformed

    private void jmVerSaldosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmVerSaldosActionPerformed
        // TODO add your handling code here:

        FormViewSaldos fvs = new FormViewSaldos();
        ControlaInstancia(fvs);
        PosicionVentana(fvs, 3, 3, 50, 50, 0, 1);

    }//GEN-LAST:event_jmVerSaldosActionPerformed

    private void jmVerCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmVerCambiosActionPerformed
        // TODO add your handling code here:
        FormViewMonedas fvm = new FormViewMonedas();
        ControlaInstancia(fvm);
        PosicionVentana(fvm, 3, 3, 50, 50, 0, 2);
    }//GEN-LAST:event_jmVerCambiosActionPerformed

    private void jmOperacionMovimientoCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmOperacionMovimientoCajaActionPerformed
        // TODO add your handling code here:
        FormOperacionCaja foc = new FormOperacionCaja();
        ControlaInstancia(foc);
    }//GEN-LAST:event_jmOperacionMovimientoCajaActionPerformed

    private void jmSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jmSalirActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        digReporteTransacciones rtransc = new digReporteTransacciones(this, false);
        rtransc.setLocationRelativeTo(null);
        rtransc.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jmOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmOpcionesActionPerformed
        // TODO add your handling code here:
        FormConfiguracion fc = new FormConfiguracion(this, true);
        fc.setLocationRelativeTo(null);
        fc.setVisible(true);
        //ControlaInstancia(fc);
    }//GEN-LAST:event_jmOpcionesActionPerformed

    private void jmVerRegistroTransaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmVerRegistroTransaccionesActionPerformed
        // TODO add your handling code here:
        FormViewTransacciones fvt = new FormViewTransacciones();
        ControlaInstancia(fvt);
        PosicionVentana(fvt, 3, 3, 50, 50, 0, 0);

    }//GEN-LAST:event_jmVerRegistroTransaccionesActionPerformed

    private void jmTransaccionesDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmTransaccionesDiaActionPerformed
        // TODO add your handling code here:
        try {
            String fecha;
            fecha = CRUD_Caja.getFechaApertura(idcaja).toString().substring(0, 10);
            verReporte(idcaja, fecha, CRUD_Caja.getNombreCaja(idcaja), CRUD_USUARIO.ObtenerUser(Ingreso.idusuario), "InformeOpercionesDia.jasper");

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jmTransaccionesDiaActionPerformed

    private void jmArqueoDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmArqueoDiaActionPerformed
        // TODO add your handling code here:
        try {
            String fecha;
            fecha = CRUD_Caja.getFechaApertura(idcaja).toString().substring(0, 10);
            //fecha = "2018-10-13";
            System.out.println(fecha);

            verReporte(idcaja, fecha, CRUD_Caja.getNombreCaja(idcaja), CRUD_USUARIO.ObtenerUser(Ingreso.idusuario), "ArqueoCajaDia.jasper");

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jmArqueoDiaActionPerformed

    private void jmPruebasCodigoControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmPruebasCodigoControlActionPerformed
        // TODO add your handling code here:
        frmGenerarControlCodigo fcc = new frmGenerarControlCodigo();
        fcc.setVisible(true);
    }//GEN-LAST:event_jmPruebasCodigoControlActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        digReporteUtilidad msdUtilidad = new digReporteUtilidad(this, false);
        msdUtilidad.setLocationRelativeTo(null);
        msdUtilidad.setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jmGestionTransaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmGestionTransaccionesActionPerformed
        // TODO add your handling code here:
        FormGestionTransacciones fgt = new FormGestionTransacciones(this, true);
        fgt.setLocationRelativeTo(null);
        fgt.setVisible(true);
    }//GEN-LAST:event_jmGestionTransaccionesActionPerformed

    private void jmGestionUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmGestionUsuariosActionPerformed
        // TODO add your handling code here:
        FormGestionUsuarios formUser = new FormGestionUsuarios();
        formUser.setLocationRelativeTo(this);
        formUser.setVisible(true);
    }//GEN-LAST:event_jmGestionUsuariosActionPerformed
    // Funcion pra abri el jinternal frame
    public static void ControlaInstancia(JInternalFrame inter) {

        boolean mostrar = true;
        String Nombre = inter.getTitle();

        for (int a = 0; a < pfondo.getComponentCount(); a++) {     // verificar si es instancia de algun componente que ya este en el jdesktoppane

            if (inter.getClass().isInstance(pfondo.getComponent(a))) {

                jp.showMessageDialog(null, "La ventana " + Nombre + " que intenta abrir ya está abierta, cierre la ventana actual e intente nuevamente");
                inter.toFront();
                pfondo.moveToFront(inter);
                mostrar = false;

            } else {
                System.out.println("no lo es, puede mostrarse");
            }

        }
        if (mostrar) {
            pfondo.add(inter);
            Centrar(pfondo, inter);
            inter.toFront();
            inter.show();
        }
        //inter.show();
    }

    //Funcion que posiciona las ventasnas del JFrame
    public static void PosicionVentana(JInternalFrame inter, int rh, int rv, int x, int y, int cx, int cy) {
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension d = tk.getScreenSize();
        int ancho = (int) d.getWidth();
        int alto = (int) d.getHeight();
        int tancho = (ancho / rh) - x;
        int talto = (alto / rv) - y;
        inter.setSize(tancho, talto);
        inter.setLocation(tancho * cx, talto * cy);
        System.out.println("Resolucion de la pantalla:" + d.getSize().toString());
    }

    // Cronometro del tiempo de incio de caja
    public void empezar() {

        activar = true;
        centesima = 0;
        segundo = 0;
        minuto = 0;
        hora = 0;

        t = new Thread(new Runnable() {
            @Override
            public void run() {

                while (activar) {

                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException ex) {
                    }

                    etiTiempo.setText("Tiempo: " + hora + ":" + minuto + ":" + segundo);

                    centesima++;
                    if (centesima >= 99) {
                        centesima = 0;
                        segundo++;
                    }
                    if (segundo >= 60) {
                        segundo = 0;
                        minuto++;
                    }

                    if (minuto >= 60) {
                        minuto = 0;
                        hora++;
                    }
                    if (hora >= 24) {
                        centesima = 0;
                        segundo = 0;
                        minuto = 0;
                        hora = 0;
                    }

                }

            }
        });
    }

    //Funcion para generar el reprote de arqueo
    private void verReporte(int codcaja, String fecha, String nameCaja, String user, String docreporte) {
        //Variables de inicio del reporte
        JasperReport reporte;
        JasperPrint reporte_view;
        try {
            //direccion del archivo JASPER
            URL in = this.getClass().getResource("/Reportes/" + docreporte);
            //instancia del reporte
            reporte = (JasperReport) JRLoader.loadObject(in);
            //Se crea un objeto HashMap
            Map<String, Object> parametros = new HashMap<String, Object>();
            // se borrran los parametros.
            parametros.clear();
            //parametros de entrada
            // Se verifica el contenido de los parametros.

            if (fecha.equals("") || nameCaja.equals("") || user.equals("")) {
                JOptionPane.showMessageDialog(this, "Debe ingresar los datos solicitados", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                parametros.put("pFecha", fecha);
                parametros.put("pidCaja", codcaja);
                parametros.put("pCaja", nameCaja);
                parametros.put("pCajero", user);

                reporte_view = JasperFillManager.fillReport(reporte, parametros, new Conexion_BDD().getConnection());
                //JasperViewer.viewReport( reporte_view , false);
                //JasperExportManager.exportReportToPdfFile(reporte_view, "C:/informes/informe.pdf");
                JasperViewer jv = new JasperViewer(reporte_view, false);
                //jv.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);

                JDialog dialog = new JDialog(this, true);
                dialog.setContentPane(jv.getContentPane());
                dialog.setSize(jv.getSize());
                dialog.setTitle("Reportes");
                //dialog.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("img.01")));

                //jv.setVisible(true);
                dialog.setVisible(true);
                System.out.println("Se genero el reporte");
            }
            // Se almacena en la instancia del reporte y se muestra el reporte

        } catch (JRException E) {
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FORM_PRINCIPAL.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FORM_PRINCIPAL.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel etiCaja;
    private javax.swing.JLabel etiTiempo;
    private javax.swing.JLabel etiUsuario;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private static javax.swing.JMenuItem jmAbrirCaja;
    private javax.swing.JMenuItem jmArqueoDia;
    private static javax.swing.JMenuItem jmCerrarCaja;
    private static javax.swing.JMenuItem jmGestionCajas;
    private static javax.swing.JMenuItem jmGestionMonedas;
    private static javax.swing.JMenuItem jmGestionSaldos;
    private javax.swing.JMenuItem jmGestionTransacciones;
    private static javax.swing.JMenuItem jmGestionUsuarios;
    private javax.swing.JMenuItem jmOpciones;
    private static javax.swing.JMenuItem jmOperacionCambios;
    private static javax.swing.JMenuItem jmOperacionMovimientoCaja;
    private javax.swing.JMenuItem jmPruebasCodigoControl;
    private javax.swing.JMenuItem jmSalir;
    private javax.swing.JMenuItem jmTransaccionesDia;
    private static javax.swing.JCheckBoxMenuItem jmVerCambios;
    private javax.swing.JCheckBoxMenuItem jmVerRegistroTransacciones;
    private static javax.swing.JCheckBoxMenuItem jmVerSaldos;
    private javax.swing.JMenu jmvregTransacciones;
    public static javax.swing.JDesktopPane pfondo;
    // End of variables declaration//GEN-END:variables
}
