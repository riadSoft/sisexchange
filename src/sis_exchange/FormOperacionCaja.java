/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sis_exchange;

import Controlador.CRUD_Caja;
import Controlador.CRUD_CajaMovimiento;
import Controlador.CRUD_ConceptoCaja;
import Controlador.CRUD_Documento;
import Controlador.CRUD_Moneda;
import Entidades.CajaMovimiento;
import Entidades.ConceptoCaja;
import Entidades.Documento;
import Entidades.Moneda;
import Utilidades.CellRenderer;
import Utilidades.HeaderCellRenderer;
import java.awt.event.ActionEvent;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author rolomen
 */
public class FormOperacionCaja extends javax.swing.JInternalFrame {

    /**
     * Creates new form FICursos
     */
    private JMenuItem menuEliminar;
    public FormOperacionCaja() {
        initComponents();
        cargarComboConcepto();
        CargarComboMonedas();
        cargarComboDocumento();

        dtm = (DefaultTableModel) tblMovimientos.getModel();
        getModeloTabla();
        try {
            VerDatos();
        } catch (Exception e) {
        }
        menuEliminar = new JMenuItem("Eliminar Registro");
        jpmenuOpcionesTabla.add(menuEliminar);
    }
    public static boolean modif = false;
    DefaultTableModel dtm = null;
    public static int idCaja = FORM_PRINCIPAL.idcaja;
    public static String desc = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        grbtnTipo = new javax.swing.ButtonGroup();
        jpmenuOpcionesTabla = new javax.swing.JPopupMenu();
        panelInicio = new javax.swing.JPanel();
        etiTitulo = new javax.swing.JLabel();
        panelCentro = new javax.swing.JPanel();
        pFirst = new javax.swing.JPanel();
        rbtnIngreso = new javax.swing.JRadioButton();
        rbtnEgreso = new javax.swing.JRadioButton();
        pCentro = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbDocumento = new javax.swing.JComboBox<>();
        cmbConcepto = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtNumeroDocumento = new javax.swing.JTextField();
        pLast = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMovimientos = new javax.swing.JTable();
        panelFin = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jpmenuOpcionesTabla.setLabel("");
        jpmenuOpcionesTabla.setLightWeightPopupEnabled(false);
        jpmenuOpcionesTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpmenuOpcionesTablaMouseClicked(evt);
            }
        });

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Movimiento de caja");
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(675, 685));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 20);
        flowLayout1.setAlignOnBaseline(true);
        panelInicio.setLayout(flowLayout1);

        etiTitulo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        etiTitulo.setText("MOVIMIENTO DE CAJA");
        panelInicio.add(etiTitulo);

        getContentPane().add(panelInicio, java.awt.BorderLayout.PAGE_START);

        panelCentro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelCentro.setLayout(new java.awt.BorderLayout());

        pFirst.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de movimieno"));
        pFirst.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 5));

        grbtnTipo.add(rbtnIngreso);
        rbtnIngreso.setSelected(true);
        rbtnIngreso.setText("Ingreso");
        pFirst.add(rbtnIngreso);

        grbtnTipo.add(rbtnEgreso);
        rbtnEgreso.setText("Egreso");
        pFirst.add(rbtnEgreso);

        panelCentro.add(pFirst, java.awt.BorderLayout.PAGE_START);

        pCentro.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle de comprobante"));
        java.awt.GridBagLayout pCentroLayout = new java.awt.GridBagLayout();
        pCentroLayout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0};
        pCentroLayout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        pCentro.setLayout(pCentroLayout);

        jLabel4.setText("Documento:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Concepto:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(jLabel5, gridBagConstraints);

        cmbDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 188;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(cmbDocumento, gridBagConstraints);

        cmbConcepto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 196;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(cmbConcepto, gridBagConstraints);

        jLabel3.setText("Monto:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(jLabel3, gridBagConstraints);

        txtMonto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMonto.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 101;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(txtMonto, gridBagConstraints);

        jLabel2.setText("Moneda:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(jLabel2, gridBagConstraints);

        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMoneda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonedaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = -2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(cmbMoneda, gridBagConstraints);

        jLabel6.setText("Numero:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        pCentro.add(txtNumeroDocumento, gridBagConstraints);

        panelCentro.add(pCentro, java.awt.BorderLayout.CENTER);

        pLast.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pLast.setPreferredSize(new java.awt.Dimension(553, 200));
        pLast.setLayout(new java.awt.BorderLayout());

        tblMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "COMPROBANTE", "INGRESOS", "EGRESOS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMovimientos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblMovimientos);
        if (tblMovimientos.getColumnModel().getColumnCount() > 0) {
            tblMovimientos.getColumnModel().getColumn(0).setResizable(false);
            tblMovimientos.getColumnModel().getColumn(1).setResizable(false);
            tblMovimientos.getColumnModel().getColumn(2).setResizable(false);
        }
        tblMovimientos.setComponentPopupMenu(jpmenuOpcionesTabla);

        pLast.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        panelCentro.add(pLast, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(panelCentro, java.awt.BorderLayout.CENTER);

        panelFin.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        panelFin.add(btnGuardar);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panelFin.add(btnCancelar);

        getContentPane().add(panelFin, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HabilitarBotones(boolean gua, boolean cancel) {
        btnGuardar.setEnabled(gua);
        btnCancelar.setEnabled(cancel);
    }

    private void limpiar() {
        try {
            txtMonto.setText("");
            txtNumeroDocumento.setText("");
        } catch (Exception e) {
        }

    }

    private void CargarComboMonedas() {
        try {
            cmbMoneda.removeAllItems();
            for (Moneda m : CRUD_Moneda.ListaMonedas()) {
                cmbMoneda.addItem(m.getNombre());
            }
        } catch (Exception e) {
        }
    }

    // Cargar el combo de los conceptos de caja
    private void cargarComboConcepto() {
        try {
            cmbConcepto.removeAllItems();
            for (ConceptoCaja c : CRUD_ConceptoCaja.ListaConceptoCajas()) {
                cmbConcepto.addItem(c.getNombre());

            }
        } catch (Exception e) {
        }
    }

    // Cargar el combo de Documentos
    private void cargarComboDocumento() {
        try {
            cmbDocumento.removeAllItems();
            for (Documento d : CRUD_Documento.ListaDocumentos()) {
                cmbDocumento.addItem(d.getNombre());
            }
        } catch (Exception e) {
        }
    }

    // Obtenemos los datos para la tabla
    private void VerDatos() {
        // Recuperamos la fecha actual
        String fecha = "";
        java.util.Date date = new java.util.Date();
        java.sql.Timestamp fechaCaja = new java.sql.Timestamp(date.getTime());
        fecha = fechaCaja.toString();
        System.out.println("fecha :" + fecha.substring(0, fecha.indexOf(" ")));
        try {
            int nf = tblMovimientos.getRowCount();
            for (int i = 0; i < nf; i++) {
                dtm.removeRow(0);
            }
            for (String[] lista : CRUD_CajaMovimiento.ListaMovimientoCaja(idCaja, fecha.substring(0, fecha.indexOf(" ")))) {
                dtm.addRow(lista);
            }
        } catch (Exception e) {
            System.out.println(e.toString());
            //JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }

    // Aplicamos un modelo a la tabla
    private void getModeloTabla() {

        tblMovimientos.setModel(dtm);
        //color de los bordes de las celdas
        tblMovimientos.setGridColor(new java.awt.Color(214, 213, 208));
        //tamaño de columnas
        tblMovimientos.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblMovimientos.getColumnModel().getColumn(1).setPreferredWidth(10);
        tblMovimientos.getColumnModel().getColumn(2).setPreferredWidth(10);
        //altura de filas
        tblMovimientos.setRowHeight(20);
        //se asigna el nuevo CellRenderer a cada columna segun su contenido
        tblMovimientos.getColumnModel().getColumn(0).setCellRenderer(new CellRenderer("text"));
        tblMovimientos.getColumnModel().getColumn(1).setCellRenderer(new CellRenderer("text center"));
        tblMovimientos.getColumnModel().getColumn(2).setCellRenderer(new CellRenderer("text center"));
        //Se asigna nuevo header a la tabla
        JTableHeader jtableHeader = tblMovimientos.getTableHeader();
        jtableHeader.setDefaultRenderer(new HeaderCellRenderer());
        tblMovimientos.setTableHeader(jtableHeader);

    }

    public void ocultarcolumna(int columna) {

        tblMovimientos.getColumnModel().getColumn(columna).setMaxWidth(0);
        tblMovimientos.getColumnModel().getColumn(columna).setMinWidth(0);
        tblMovimientos.getColumnModel().getColumn(columna).setPreferredWidth(0);
        tblMovimientos.getColumnModel().getColumn(columna).setResizable(false);

    }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

    }//GEN-LAST:event_formInternalFrameOpened

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        // Creamos las variables a utilizar y las inicializamos
        boolean guardar = false;
        java.util.Date date = new java.util.Date();
        java.sql.Timestamp fecha = new java.sql.Timestamp(date.getTime());

        // Creamos el objeto caja movimiento
        CajaMovimiento cm = new CajaMovimiento();

        try {
            // Incertamos los attributos al objeto
            cm.setNumero(txtNumeroDocumento.getText());
            if (rbtnIngreso.isSelected()) {
                cm.setIngreso(Double.parseDouble(txtMonto.getText()));
                cm.setEgreso(0);
                cm.setTipo("I");
            }
            if (rbtnEgreso.isSelected()) {
                cm.setEgreso(Double.parseDouble(txtMonto.getText()));
                cm.setIngreso(0);
                cm.setTipo("E");
            }
            cm.setSaldo(0);
            cm.setFecha(fecha);
            cm.setIdDocumento(CRUD_Documento.ObtenerIdDocumento(cmbDocumento.getSelectedItem().toString()));
            cm.setIdConcepto(CRUD_ConceptoCaja.ObtenerIdConcepto(cmbConcepto.getSelectedItem().toString()));
            cm.setIdMoneda(CRUD_Moneda.ObtenerId(cmbMoneda.getSelectedItem().toString()));
            cm.setIdCaja(idCaja);
            cm.setIdUsuario(Ingreso.idusuario);
            String glosa = JOptionPane.showInputDialog(rootPane, "Glosa del movimiento de caja:", "Guardar movimiento...", JOptionPane.INFORMATION_MESSAGE);
            if (glosa != null) {
                cm.setGlosa(glosa);
                guardar = CRUD_CajaMovimiento.Guardar(cm);
                if (guardar) {
                    //Se manda un mensaje si se registro correctamente.
                    JOptionPane.showMessageDialog(rootPane, "Se registro correctamente el movimiento de caja en el sistema.", "Guardar Movimiento de Caja", JOptionPane.INFORMATION_MESSAGE);
                    VerDatos();
                    //actualizamos los saldos de la ventana saldos.
                    FormViewSaldos.VerDatos(idCaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja));
                    // Actuaizamos el registro de la transaccion.
                    FormViewTransacciones.VerDatos();
                    //Actualizamos la venta operaciones
                    FormOperacionCambio.getSaldoBolivianos();
                    FormOperacionCambio.getSaldoDolares();
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se registro los datos verifique e intente nuevamente", "Guardar Movimiento de Caja", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cmbMonedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonedaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonedaItemStateChanged

    private void jpmenuOpcionesTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpmenuOpcionesTablaMouseClicked
        // TODO add your handling code here:
        JMenuItem menu = (JMenuItem) evt.getSource();
        if (menu == menuEliminar) {
            eliminarFila();
        }
    }//GEN-LAST:event_jpmenuOpcionesTablaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cmbConcepto;
    private javax.swing.JComboBox<String> cmbDocumento;
    private javax.swing.JComboBox<String> cmbMoneda;
    private javax.swing.JLabel etiTitulo;
    private javax.swing.ButtonGroup grbtnTipo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu jpmenuOpcionesTabla;
    private javax.swing.JPanel pCentro;
    private javax.swing.JPanel pFirst;
    private javax.swing.JPanel pLast;
    private javax.swing.JPanel panelCentro;
    private javax.swing.JPanel panelFin;
    private javax.swing.JPanel panelInicio;
    private javax.swing.JRadioButton rbtnEgreso;
    private javax.swing.JRadioButton rbtnIngreso;
    private javax.swing.JTable tblMovimientos;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNumeroDocumento;
    // End of variables declaration//GEN-END:variables

    private void eliminarFila() {
        int selectRow = tblMovimientos.getSelectedRow();
        tblMovimientos.remove(selectRow);
    }

}
