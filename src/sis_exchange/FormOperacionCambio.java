/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sis_exchange;

import Controlador.CRUD_Caja;
import Controlador.CRUD_Configuracion;
import Controlador.CRUD_DetalleCaja;
import Controlador.CRUD_Moneda;
import Controlador.CRUD_OperacionMoneda;
import Controlador.CRUD_Sucursal;
import Controlador.Conexion_BDD;
import Entidades.Configuracion;
import Entidades.Moneda;
import Entidades.OperacionMoneda;
import Utilidades.ControlExcepciones;
import Utilidades.Numero_a_Letra;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author EDWARD
 */
public class FormOperacionCambio extends javax.swing.JInternalFrame {

    /**
     * Creates new form FICursos
     */
    public FormOperacionCambio() {
        initComponents();
        //getSaldoBolivianos();
    }
    public static boolean modif = false;
    DefaultTableModel dtm = null;
    public static int idCaja = 0;
    public static String desc = "";
    private static BigDecimal tpc = BigDecimal.ZERO;
    private static BigDecimal tpv = BigDecimal.ZERO;
    private BigDecimal resc = BigDecimal.ZERO;
    private BigDecimal resv = BigDecimal.ZERO;
    private Configuracion con = new Configuracion();
    private int nop = 0;
    private Conexion_BDD conbdd = new Conexion_BDD();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pSuperior = new javax.swing.JPanel();
        etiTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        etiNCaja = new javax.swing.JLabel();
        etiNOperacion = new javax.swing.JLabel();
        pcentro = new javax.swing.JPanel();
        psuperiorcentro = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        etiSaldoBolivianos = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        etiSaldoDolares = new javax.swing.JLabel();
        pcentrocentro = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        pfirst = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCI = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtCotizacion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtImporte = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pcenter = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        etiResultado = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        cmbMonedaVenta = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtImporteVenta = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        etiResultadoVenta = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtCotizacionVenta = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtNombreVenta = new javax.swing.JTextField();
        txtCIVenta = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtRecibidoVenta = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtCambioVenta = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        pInferior = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cambio de Moneda Extrangera");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pSuperior.setLayout(new java.awt.GridBagLayout());

        etiTitulo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        etiTitulo.setText("OPERACION: COMPRA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(9, 164, 3, 0);
        pSuperior.add(etiTitulo, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("CAJA:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 8, 0, 8);
        pSuperior.add(jLabel1, gridBagConstraints);

        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("NRO DE OPERACION:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 5);
        pSuperior.add(jLabel4, gridBagConstraints);

        etiNCaja.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        etiNCaja.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(3, 12, 0, 12);
        pSuperior.add(etiNCaja, gridBagConstraints);

        etiNOperacion.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        etiNOperacion.setText("00000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 7, 0, 7);
        pSuperior.add(etiNOperacion, gridBagConstraints);

        getContentPane().add(pSuperior, java.awt.BorderLayout.NORTH);

        pcentro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pcentro.setLayout(new java.awt.BorderLayout());

        psuperiorcentro.setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Saldo Bolivianos"));

        etiSaldoBolivianos.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        etiSaldoBolivianos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiSaldoBolivianos.setText("0.00 Bs.-");
        jPanel5.add(etiSaldoBolivianos);

        psuperiorcentro.add(jPanel5);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Saldo Dolares"));

        etiSaldoDolares.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        etiSaldoDolares.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiSaldoDolares.setText("0.00 $us.-");
        jPanel7.add(etiSaldoDolares);

        psuperiorcentro.add(jPanel7);

        pcentro.add(psuperiorcentro, java.awt.BorderLayout.PAGE_START);

        pcentrocentro.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.BorderLayout());

        pfirst.setBackground(new java.awt.Color(255, 255, 255));
        java.awt.GridBagLayout pfirstLayout = new java.awt.GridBagLayout();
        pfirstLayout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0};
        pfirstLayout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        pfirst.setLayout(pfirstLayout);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setText("Nombre/ Razon Social:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        pfirst.add(jLabel2, gridBagConstraints);

        txtNombre.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtNombre.setText("S/N");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pfirst.add(txtNombre, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setText("NIT/CI:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        pfirst.add(jLabel3, gridBagConstraints);

        txtCI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtCI.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pfirst.add(txtCI, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setText("Moneda:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        pfirst.add(jLabel5, gridBagConstraints);

        cmbMoneda.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMoneda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonedaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pfirst.add(cmbMoneda, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setText("Coizacion:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 1);
        pfirst.add(jLabel7, gridBagConstraints);

        txtCotizacion.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtCotizacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCotizacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCotizacionKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCotizacionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCotizacionKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 112;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pfirst.add(txtCotizacion, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel9.setText("Importe:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        pfirst.add(jLabel9, gridBagConstraints);

        txtImporte.setBackground(new java.awt.Color(153, 255, 255));
        txtImporte.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtImporte.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txtImporte.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtImporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtImporteKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtImporteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtImporteKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pfirst.add(txtImporte, gridBagConstraints);
        formatoTextoNumero();

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setText("Bs.-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        pfirst.add(jLabel8, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel10.setText("$us.-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        pfirst.add(jLabel10, gridBagConstraints);

        jPanel2.add(pfirst, java.awt.BorderLayout.CENTER);

        pcenter.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado del cambio"));
        pcenter.setPreferredSize(new java.awt.Dimension(426, 100));
        pcenter.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("MONTO A ENTREGAR:");
        pcenter.add(jLabel6, java.awt.BorderLayout.WEST);

        etiResultado.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        etiResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiResultado.setText("0.00 Bs.");
        pcenter.add(etiResultado, java.awt.BorderLayout.CENTER);

        jPanel2.add(pcenter, java.awt.BorderLayout.SOUTH);

        jTabbedPane1.addTab("COMPRA", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        jPanel4Layout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0, 20, 0};
        jPanel4.setLayout(jPanel4Layout);

        cmbMonedaVenta.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cmbMonedaVenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMonedaVenta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonedaVentaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 124;
        jPanel4.add(cmbMonedaVenta, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel11.setText("Importe:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(jLabel11, gridBagConstraints);

        txtImporteVenta.setBackground(new java.awt.Color(153, 255, 255));
        txtImporteVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtImporteVenta.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txtImporteVenta.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtImporteVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtImporteVentaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtImporteVentaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtImporteVentaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.ipady = 10;
        jPanel4.add(txtImporteVenta, gridBagConstraints);
        formatoTextoNumero();

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Monto a Cobrar"));
        jPanel6.setLayout(new java.awt.BorderLayout());

        etiResultadoVenta.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        etiResultadoVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiResultadoVenta.setText("0.00 Bs.");
        jPanel6.add(etiResultadoVenta, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = -144;
        jPanel4.add(jPanel6, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel13.setText("Coizacion:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jLabel13, gridBagConstraints);

        txtCotizacionVenta.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtCotizacionVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCotizacionVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCotizacionVentaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCotizacionVentaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCotizacionVentaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 117;
        jPanel4.add(txtCotizacionVenta, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel14.setText("Bs.-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jLabel14, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setText("$us.-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        jPanel4.add(jLabel15, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel16.setText("Razon Social:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 15;
        jPanel4.add(jLabel16, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel17.setText("NIT/CI:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(jLabel17, gridBagConstraints);

        txtNombreVenta.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtNombreVenta.setText("S/N");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 186;
        jPanel4.add(txtNombreVenta, gridBagConstraints);

        txtCIVenta.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtCIVenta.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 117;
        jPanel4.add(txtCIVenta, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel18.setText("Moneda:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 15;
        jPanel4.add(jLabel18, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel12.setText("Recibido:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 15;
        jPanel4.add(jLabel12, gridBagConstraints);

        txtRecibidoVenta.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtRecibidoVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRecibidoVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecibidoVentaActionPerformed(evt);
            }
        });
        txtRecibidoVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRecibidoVentaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRecibidoVentaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRecibidoVentaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 117;
        jPanel4.add(txtRecibidoVenta, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel19.setText("Cambio:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 15;
        jPanel4.add(jLabel19, gridBagConstraints);

        txtCambioVenta.setEditable(false);
        txtCambioVenta.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtCambioVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCambioVenta.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 118;
        jPanel4.add(txtCambioVenta, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel20.setText("Bs.-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        jPanel4.add(jLabel20, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel21.setText("Bs.-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        jPanel4.add(jLabel21, gridBagConstraints);

        jTabbedPane1.addTab("VENTA", jPanel4);

        pcentrocentro.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pcentro.add(pcentrocentro, java.awt.BorderLayout.CENTER);

        getContentPane().add(pcentro, java.awt.BorderLayout.CENTER);

        pInferior.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        pInferior.add(btnGuardar);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pInferior.add(btnCancelar);

        getContentPane().add(pInferior, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HabilitarBotones(boolean gua, boolean cancel) {
        btnGuardar.setEnabled(gua);
        btnCancelar.setEnabled(cancel);
    }
    
    private void formatoTextoNumero() {
        
        NumberFormat editFormat = NumberFormat.getNumberInstance(Locale.ENGLISH);
        // Para la edición, no queremos separadores de millares
        editFormat.setGroupingUsed(false);
        NumberFormatter enFormat = new NumberFormatter(editFormat);
        DefaultFormatterFactory currFactory = new DefaultFormatterFactory(enFormat);
        // El formateador de edición admite caracteres incorrectos
        enFormat.setAllowsInvalid(true);
        txtImporte.setFormatterFactory(currFactory);
    }
    
    private void limpiar(int sel) {
        try {
            if (sel == 1) {
                txtNombre.setText("S/N");
                txtCI.setText("0");
                txtCotizacion.setText("");
                txtImporte.setText("");
                CargarComboMonedas();
                txtImporte.requestFocus();
            }
            if (sel == 2) {
                txtNombreVenta.setText("S/N");
                txtCIVenta.setText("0");
                txtCotizacionVenta.setText("");
                txtImporteVenta.setText("");
                txtRecibidoVenta.setText("");
                txtCambioVenta.setText("");
                CargarComboMonedasVenta();
                txtImporteVenta.requestFocus();
            }
            
        } catch (Exception e) {
        }
        
    }
    
    public static void getSaldoBolivianos() {
        try {
            DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
            simbolo.setDecimalSeparator('.');
            simbolo.setGroupingSeparator(',');
            DecimalFormat formatea = new DecimalFormat("###,###.##", simbolo);
            formatea.setMinimumFractionDigits(2);
            
            etiSaldoBolivianos.setText(formatea.format(CRUD_DetalleCaja.ObtenerMontoMoneda("BOLIVIANOS", FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja))) + " Bs.-");
            
        } catch (Exception e) {
        }
    }
    
    public static void getSaldoDolares() {
        try {
            DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
            simbolo.setDecimalSeparator('.');
            simbolo.setGroupingSeparator(',');
            DecimalFormat formatea = new DecimalFormat("###,###.##", simbolo);
            formatea.setMinimumFractionDigits(2);
            etiSaldoDolares.setText(formatea.format(CRUD_DetalleCaja.ObtenerMontoMoneda("DOLAR", FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja))) + " $us.-");
        } catch (Exception e) {
        }
    }
    
    public void CargarComboMonedas() throws ClassNotFoundException, SQLException {
        
        cmbMoneda.removeAllItems();
        for (Moneda m : CRUD_Moneda.ListarporMoneda()) {
            cmbMoneda.addItem(m.getNombre());
        }
        
    }
    
    public void CargarComboMonedasVenta() throws ClassNotFoundException, SQLException {
        
        cmbMonedaVenta.removeAllItems();
        for (Moneda m : CRUD_Moneda.ListarporMoneda()) {
            cmbMonedaVenta.addItem(m.getNombre());
        }
        
    }
    
    public static void getTipoCambioCompra(String nom) {
        try {
            if (nom.equals("")) {
                txtCotizacion.setText("0.00");
                tpc = BigDecimal.ZERO;
            } else {
                tpc = CRUD_Moneda.ObtenerTipoCompra(nom);
                txtCotizacion.setText(String.valueOf(tpc));
            }
        } catch (Exception e) {
        }
    }
    
    public void getCambioCompra() {
        
        resc = BigDecimal.ZERO;
        BigDecimal impt = BigDecimal.ZERO;
        
        if (txtImporte.getText().equals("")) {
            impt = BigDecimal.ZERO;
        } else {
            impt = BigDecimal.valueOf(Double.parseDouble(txtImporte.getText()));
        }
        resc = impt.multiply(tpc);
        
        DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
        simbolo.setDecimalSeparator('.');
        simbolo.setGroupingSeparator(',');
        DecimalFormat formatea = new DecimalFormat("###,###.##", simbolo);
        formatea.setMinimumFractionDigits(2);
        
        etiResultado.setText(formatea.format(resc) + " Bs.-");
        
        System.out.println("-> Importe: " + impt);
        System.out.println("-> Tipo de cambio: " + tpc);
        System.out.println("-> Resultado de rest: " + resc);
    }
    
    public static void getTipoCambioVenta(String nom) {
        try {
            if (nom.equals("")) {
                txtCotizacionVenta.setText("0.00");
                tpv = BigDecimal.ZERO;
            } else {
                tpv = CRUD_Moneda.ObtenerTipoVenta(nom);
                txtCotizacionVenta.setText(String.valueOf(tpv));
            }
        } catch (Exception e) {
        }
    }
    
    public void getCambioVenta() {
        
        BigDecimal impt = BigDecimal.ZERO;
        resv = BigDecimal.ZERO;
        
        System.out.println("Importe: " + txtImporteVenta.getText());
        if (txtImporteVenta.getText().equals("")) {
            impt = BigDecimal.ZERO;
        } else {
            impt = BigDecimal.valueOf(Double.parseDouble(txtImporteVenta.getText()));
        }
        resv = impt.multiply(tpv);
        System.out.println("RESULTADO: " + resv);
        DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
        simbolo.setDecimalSeparator('.');
        simbolo.setGroupingSeparator(',');
        DecimalFormat formatea = new DecimalFormat("###,###.##", simbolo);
        formatea.setMinimumFractionDigits(2);
        etiResultadoVenta.setText(formatea.format(resv) + " Bs.-");
    }
    
    public void getOperacionCambioVenta() {
        BigDecimal rc = BigDecimal.ZERO;
        BigDecimal cambio = BigDecimal.ZERO;
        
        if (txtRecibidoVenta.getText().equals("")) {
            rc = BigDecimal.ZERO;
        } else {
            rc = BigDecimal.valueOf(Double.parseDouble(txtRecibidoVenta.getText()));
        }
        cambio = rc.subtract(resv);
        DecimalFormat formatea = new DecimalFormat("###,###.##");
        txtCambioVenta.setText(formatea.format(cambio));
    }

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            
            System.out.println("Inicio form");
            getSaldoBolivianos();
            getSaldoDolares();
            CargarComboMonedas();
            CargarComboMonedasVenta();
            //Obetnemos el numero de operacion
            con.setIdUsuario(Ingreso.idusuario);
            con.setIdCaja(FORM_PRINCIPAL.idcaja);
            nop = CRUD_Configuracion.ObtenerNumeroOperacion(con);
            String formatString = String.format("%%0%dd", 5);
            String formattedString = String.format(formatString, (nop - 1));
            etiNOperacion.setText(formattedString);
            txtImporte.requestFocus();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        guardarOperacion();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        if (jTabbedPane1.getSelectedIndex() == 0) {
            limpiar(1);
        } else {
            limpiar(2);
        }

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtImporteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImporteKeyPressed
        // TODO add your handling code here:
        getCambioCompra();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            guardarOperacion();
        }
    }//GEN-LAST:event_txtImporteKeyPressed

    private void txtImporteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImporteKeyReleased
        // TODO add your handling code here:
        getCambioCompra();
    }//GEN-LAST:event_txtImporteKeyReleased

    private void cmbMonedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonedaItemStateChanged
        // TODO add your handling code here:
        try {
            System.out.println("Sleccion Moneda: " + cmbMoneda.getSelectedItem().toString());
            getTipoCambioCompra(cmbMoneda.getSelectedItem().toString());
            txtImporte.requestFocus();
            getCambioCompra();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmbMonedaItemStateChanged

    private void txtCotizacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCotizacionKeyPressed
        // TODO add your handling code here:
        tpc = BigDecimal.valueOf(Double.parseDouble(txtCotizacion.getText()));
        getCambioCompra();
    }//GEN-LAST:event_txtCotizacionKeyPressed

    private void txtCotizacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCotizacionKeyReleased
        // TODO add your handling code here:
        tpc = BigDecimal.valueOf(Double.parseDouble(txtCotizacion.getText()));
        getCambioCompra();
    }//GEN-LAST:event_txtCotizacionKeyReleased

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        if (jTabbedPane1.getSelectedIndex() == 0) {
            etiTitulo.setText("OPERACION: COMPRA");
            txtImporte.requestFocus();
        } else {
            etiTitulo.setText("OPERACION: VENTA");
            txtImporteVenta.requestFocus();
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void cmbMonedaVentaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonedaVentaItemStateChanged
        // TODO add your handling code here:
        try {
            System.out.println("Sleccion Moneda: " + cmbMonedaVenta.getSelectedItem().toString());
            getTipoCambioVenta(cmbMonedaVenta.getSelectedItem().toString());
            txtImporteVenta.requestFocus();
            getCambioVenta();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmbMonedaVentaItemStateChanged

    private void txtImporteVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImporteVentaKeyPressed
        // TODO add your handling code here:
        getCambioVenta();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            guardarOperacion();
        }
    }//GEN-LAST:event_txtImporteVentaKeyPressed

    private void txtImporteVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImporteVentaKeyReleased
        // TODO add your handling code here:
        getCambioVenta();
    }//GEN-LAST:event_txtImporteVentaKeyReleased

    private void txtCotizacionVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCotizacionVentaKeyPressed
        // TODO add your handling code here:
        tpv = BigDecimal.valueOf(Double.parseDouble(txtCotizacionVenta.getText()));
        getCambioVenta();
    }//GEN-LAST:event_txtCotizacionVentaKeyPressed

    private void txtCotizacionVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCotizacionVentaKeyReleased
        // TODO add your handling code here:
        tpv = BigDecimal.valueOf(Double.parseDouble(txtCotizacionVenta.getText()));
        getCambioVenta();
    }//GEN-LAST:event_txtCotizacionVentaKeyReleased

    private void txtRecibidoVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecibidoVentaKeyPressed
        // TODO add your handling code here:
        getOperacionCambioVenta();
    }//GEN-LAST:event_txtRecibidoVentaKeyPressed

    private void txtRecibidoVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecibidoVentaKeyReleased
        // TODO add your handling code here:
        getOperacionCambioVenta();
    }//GEN-LAST:event_txtRecibidoVentaKeyReleased

    private void txtImporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImporteKeyTyped
        // TODO add your handling code here:
        ControlExcepciones.eventoTexto("entero", evt, txtImporte);
    }//GEN-LAST:event_txtImporteKeyTyped

    private void txtCotizacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCotizacionKeyTyped
        // TODO add your handling code here:
        ControlExcepciones.eventoTexto("decimal", evt, txtImporte);
    }//GEN-LAST:event_txtCotizacionKeyTyped

    private void txtImporteVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImporteVentaKeyTyped
        // TODO add your handling code here:
        ControlExcepciones.eventoTexto("entero", evt, txtImporteVenta);
    }//GEN-LAST:event_txtImporteVentaKeyTyped

    private void txtCotizacionVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCotizacionVentaKeyTyped
        // TODO add your handling code here:
        ControlExcepciones.eventoTexto("decimal", evt, txtCotizacionVenta);
    }//GEN-LAST:event_txtCotizacionVentaKeyTyped

    private void txtRecibidoVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecibidoVentaKeyTyped
        // TODO add your handling code here:
        ControlExcepciones.eventoTexto("decimal", evt, txtRecibidoVenta);
    }//GEN-LAST:event_txtRecibidoVentaKeyTyped

    private void txtRecibidoVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecibidoVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRecibidoVentaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private static javax.swing.JComboBox<String> cmbMoneda;
    private static javax.swing.JComboBox<String> cmbMonedaVenta;
    private javax.swing.JLabel etiNCaja;
    private javax.swing.JLabel etiNOperacion;
    private javax.swing.JLabel etiResultado;
    private javax.swing.JLabel etiResultadoVenta;
    private static javax.swing.JLabel etiSaldoBolivianos;
    private static javax.swing.JLabel etiSaldoDolares;
    private javax.swing.JLabel etiTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pInferior;
    private javax.swing.JPanel pSuperior;
    private javax.swing.JPanel pcenter;
    private javax.swing.JPanel pcentro;
    private javax.swing.JPanel pcentrocentro;
    private javax.swing.JPanel pfirst;
    private javax.swing.JPanel psuperiorcentro;
    private javax.swing.JTextField txtCI;
    private javax.swing.JTextField txtCIVenta;
    private javax.swing.JTextField txtCambioVenta;
    private static javax.swing.JTextField txtCotizacion;
    private static javax.swing.JTextField txtCotizacionVenta;
    private javax.swing.JFormattedTextField txtImporte;
    private javax.swing.JFormattedTextField txtImporteVenta;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreVenta;
    private javax.swing.JTextField txtRecibidoVenta;
    // End of variables declaration//GEN-END:variables

    private boolean verificarSaldo(String moneda, BigDecimal monto, int idcaja) {
        boolean est = false;
        BigDecimal saldo = BigDecimal.ZERO;
        try {
            saldo = CRUD_DetalleCaja.ObtenerMontoMoneda(moneda, idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja));
            if (saldo.compareTo(monto)==1 || saldo.compareTo(monto)==0) {
                est = true;
            }
        } catch (Exception e) {
        }
        return est;
    }
    
    private void guardarOperacion() {
        try {
            // Configuraion de las fechas en el txtfield
            int idOperacion = 0;
            int nop = 0;
            BigDecimal importe = BigDecimal.ZERO;
            BigDecimal tipocambio = BigDecimal.ZERO;
            BigDecimal monto = BigDecimal.ZERO;
            String tipoOperacion = "";
            String ci = "";
            String name = "";
            int estado = 1;
            int idsucursal = CRUD_Sucursal.getSucursalActiva();
            int idcaja = FORM_PRINCIPAL.idcaja;
            int idmoneda = 1;
            String moneda = "";
            int sel = 0;
            boolean estadoCaja;
            String detalle = "";
            
            java.util.Date date = new java.util.Date();
            java.sql.Timestamp fecha = new java.sql.Timestamp(date.getTime());
            
            nop = CRUD_Configuracion.ObtenerNumeroOperacion(con);
            
            if (jTabbedPane1.getSelectedIndex() == 0) {
                importe = BigDecimal.valueOf(Double.parseDouble(txtImporte.getText()));
                tipocambio = tpc;
                tipoOperacion = "C";
                ci = txtCI.getText();
                name = txtNombre.getText();
                moneda = cmbMoneda.getSelectedItem().toString();
                idmoneda = CRUD_Moneda.ObtenerId(moneda);
                sel = 1;
                estadoCaja = verificarSaldo("BOLIVIANOS", importe.multiply(tipocambio), idcaja);
                detalle = "COMPRA DE MONEDA EXTRANGERA - " + moneda;
            } else {
                importe = BigDecimal.valueOf(Double.parseDouble(txtImporteVenta.getText()));
                tipocambio = tpv;
                tipoOperacion = "V";
                ci = txtCIVenta.getText();
                name = txtNombre.getText();
                moneda = cmbMonedaVenta.getSelectedItem().toString();
                idmoneda = CRUD_Moneda.ObtenerId(moneda);
                sel = 2;
                estadoCaja = verificarSaldo(moneda, importe, idcaja);
                detalle = "VENTA DE MONEDA EXTRANGERA - " + moneda;
            }
            if (estadoCaja) {
                boolean gua = CRUD_OperacionMoneda.Guardar(new OperacionMoneda(idOperacion, nop, fecha, importe, tipocambio, tipoOperacion, ci, name, estado, idsucursal, idcaja, Ingreso.idusuario, idmoneda));
                if (gua) {
                    monto = importe.multiply(tipocambio);
                    JOptionPane.showMessageDialog(rootPane, "Se registro la transacccion correctamente");
                    //Convertimos el total en forma literal.
                    Numero_a_Letra nlit = new Numero_a_Letra();
                    // Generamos el reporte del comprobante
                    Properties propiedades = new Properties();
                    InputStream propertiesStream = ClassLoader.getSystemResourceAsStream("configuracion/configuracion.properties");
                    propiedades.load(propertiesStream);
                    propertiesStream.close();
                    if (CRUD_Configuracion.getImpresion() == 1) {
                        verreporte(nop, tipoOperacion, fecha.toString(), name, ci, detalle, importe, nlit.Convertir(monto + "", true), tipocambio, idcaja);
                    }
                    //Actulizamos el numero de operacion en la configuracion
                    con.setAct_oper(nop);
                    CRUD_Configuracion.ActualizaNumeroOperacion(con);
                    String formatString = String.format("%%0%dd", 5);
                    String formattedString = String.format(formatString, nop);
                    etiNOperacion.setText(formattedString);
                    //Actualizamos lo saldos en la ventana operaciones
                    getSaldoBolivianos();
                    getSaldoDolares();
                    //limpiamos los campos 
                    limpiar(sel);
                    //actualizamos los saldos de la ventana saldos.
                    FormViewSaldos.VerDatos(idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja));
                    // Actuaizamos el registro de a transaccion.
                    FormViewTransacciones.VerDatos();
                    
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se registro la transaccion, verique los datos", "Aviso", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No cuenta con el saldo suficente en caja, realice ingreso de efecivo en cajaa.", "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }
    
    public static void actualizarCombos(String moneda) {
        cmbMoneda.setSelectedItem(moneda);
        cmbMonedaVenta.setSelectedItem(moneda);
    }
    
    private void verreporte(int nop, String tipoOperacion, String fecha_trans, String name, String ci, String detalle, BigDecimal importe, String num_literal, BigDecimal tipocambio, int idcaja) {
        //Variables de inicio del reporte
        JasperReport reporte;
        JasperPrint reporte_view;
        try {
            //direccion del archivo JASPER
            URL in = this.getClass().getResource("/Reportes/comprobante.jasper");
            //instancia del reporte
            reporte = (JasperReport) JRLoader.loadObject(in);
            //Se crea un objeto HashMap
            Map<String, Object> parametros = new HashMap<String, Object>();
            // se borrran los parametros.
            parametros.clear();
            //parametros de entrada
            // Se verifica el contenido de los parametros.

            if (name.equals("") || ci.equals("") || detalle.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Debe ingresar los datos solicitados", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                parametros.put("pntrans", String.valueOf(nop));
                parametros.put("pttrans", tipoOperacion);
                parametros.put("pfecha", fecha_trans);
                parametros.put("pnombre", name);
                parametros.put("pci", ci);
                parametros.put("pcant", importe);
                parametros.put("pdetalle", detalle);
                parametros.put("ptc", tipocambio);
                parametros.put("pmonliteral", num_literal);
                parametros.put("pcaja", String.valueOf(idcaja));
                
                reporte_view = JasperFillManager.fillReport(reporte, parametros, new Conexion_BDD().getConnection());
                JasperViewer.viewReport(reporte_view, false);
                //JasperPrintManager.printReport(reporte_view, false);
            }
            // Se almacena en la instancia del reporte y se muestra el reporte
        } catch (JRException E) {
            System.out.println(E);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormOperacionCambio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormOperacionCambio.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
}