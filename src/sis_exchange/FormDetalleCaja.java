/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sis_exchange;

import Controlador.CRUD_Caja;
import Controlador.CRUD_DetalleCaja;
import Controlador.CRUD_Moneda;
import Entidades.Caja;
import Entidades.DetalleCaja;
import Entidades.Moneda;
import Utilidades.CellRenderer;
import Utilidades.HeaderCellRenderer;
import java.sql.SQLException;
import java.sql.Timestamp;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.table.JTableHeader;

/**
 *
 * @author EDWARD
 */
public class FormDetalleCaja extends javax.swing.JDialog {

    /**
     * Creates new form FICursos
     */
    public FormDetalleCaja() {
        initComponents();
    }

    public FormDetalleCaja(int idcaja) {
        try {
            //CargarComboCajas();
            //cmbCaja.setSelectedItem(CRUD_Caja.getNombreCaja(idcaja));
            //dtm = (DefaultTableModel) tblDetalleCaja.getModel();
            //VerDatos(idcaja);
            initComponents();
            CargarComboCajas();
            cmbCaja.setSelectedItem(CRUD_Caja.getNombreCaja(idcaja));
            HabilitarBotones(true, false, false);
        } catch (Exception e) {
            System.out.println("Error en el objto:"+e);
        }
    }
    
    public static boolean modif = false;
    DefaultTableModel dtm = null;
    public static int idDetalleCaja = 0;
    public static String desc = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSuperior = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmbCaja = new javax.swing.JComboBox<>();
        panelCentro = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetalleCaja = new javax.swing.JTable();
        panelInferior = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setTitle("Gestion de Cajas");
        setModal(true);
        setPreferredSize(new java.awt.Dimension(1000, 350));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel5.setText("Caja:");
        panelSuperior.add(jLabel5);

        cmbCaja.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCaja.setPreferredSize(new java.awt.Dimension(200, 23));
        cmbCaja.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCajaItemStateChanged(evt);
            }
        });
        cmbCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCajaActionPerformed(evt);
            }
        });
        panelSuperior.add(cmbCaja);

        getContentPane().add(panelSuperior, java.awt.BorderLayout.PAGE_START);

        panelCentro.setLayout(new java.awt.BorderLayout());

        tblDetalleCaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "MONEDA", "SALDO", "ESTADO", "FECHA", "IDCAJA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDetalleCaja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleCajaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDetalleCaja);

        panelCentro.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelCentro, java.awt.BorderLayout.CENTER);

        panelInferior.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        panelInferior.add(btnNuevo);

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        panelInferior.add(btnGuardar);

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        panelInferior.add(btnEliminar);

        getContentPane().add(panelInferior, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HabilitarBotones(boolean nue, boolean gua, boolean elim) {
        btnNuevo.setEnabled(nue);
        btnGuardar.setEnabled(gua);
        btnEliminar.setEnabled(elim);
    }
   
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
       
    }//GEN-LAST:event_formInternalFrameOpened

    private void tblDetalleCajaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleCajaMouseClicked
        // TODO add your handling code here:
          if (evt.getClickCount() == 1){
              HabilitarBotones(true, true, true);
          }
    }//GEN-LAST:event_tblDetalleCajaMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        try {
            java.util.Date date = new java.util.Date();
            java.sql.Timestamp fecha = new java.sql.Timestamp(date.getTime());
            dtm.addRow(new Object[]{0,"Elija una opcion",null,null,fecha,CRUD_Caja.getidCaja(cmbCaja.getSelectedItem().toString())});
        } catch (Exception e) {
        }
        
        HabilitarBotones(false, true, true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        DetalleCaja dc = new DetalleCaja();
        boolean gua= false, est=false;
        try {
                     int row = tblDetalleCaja.getRowCount();
                     for (int i = 0; i < row; i++) {
                        dc.setIddetallecaja( (int) tblDetalleCaja.getValueAt(i, 0));
                        dc.setMoneda(CRUD_Moneda.ObtenerId(tblDetalleCaja.getValueAt(i, 1).toString()));
                        dc.setMonto( Double.parseDouble(tblDetalleCaja.getValueAt(i, 2).toString().replace(",","")));
                        dc.setEstado(((boolean) tblDetalleCaja.getValueAt(i, 3))?1:0);
                         if (((int) tblDetalleCaja.getValueAt(i, 0))>0) {
                             dc.setFecha(Timestamp.valueOf(tblDetalleCaja.getValueAt(i, 4).toString()));
                         } else {
                                    java.util.Date date = new java.util.Date();
                                    java.sql.Timestamp fecha = new java.sql.Timestamp(date.getTime());
                                    dc.setFecha(fecha);
                         }
                        dc.setIdcaja( (int) tblDetalleCaja.getValueAt(i, 5));
                        gua = CRUD_DetalleCaja.Guardar(dc);
                        System.out.println("Los datos son:"+dc.getIddetallecaja()+"|"+dc.getMoneda()+"|"+dc.getMonto()+"|"+dc.getFecha()+"|"+dc.getEstado()+"|"+dc.getIdcaja());
                    }
                    if (gua) {
                             JOptionPane.showMessageDialog(rootPane, "Datos guardados correctamente","Aviso",JOptionPane.INFORMATION_MESSAGE);
                         } else {
                             JOptionPane.showMessageDialog(rootPane, "Error al guardar el registro verifique los datos","Aviso",JOptionPane.ERROR_MESSAGE);
                    } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e,"Error",JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        DetalleCaja dc = new DetalleCaja();
        try {
            int row = tblDetalleCaja.getSelectedRow();
            dc.setIddetallecaja( (int) tblDetalleCaja.getValueAt(row, 0));
            int resp = JOptionPane.showConfirmDialog(null, "Â¿Desea eliminar el registro seleccionado?", "Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (resp==0) {
                if (CRUD_DetalleCaja.Eliminar(dc)) {
                    JOptionPane.showMessageDialog(rootPane, "Registro elminado exitosamente","Aviso",JOptionPane.INFORMATION_MESSAGE);
                    dtm.removeRow(row);
                }
            }             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e,"Error",JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void cmbCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCajaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCajaActionPerformed

    private void cmbCajaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCajaItemStateChanged

        try {
            dtm = (DefaultTableModel) tblDetalleCaja.getModel();
            getModeloTabla();
            VerDatos(CRUD_Caja.getidCaja(cmbCaja.getSelectedItem().toString()));
        } catch (Exception e) {
        }

    }//GEN-LAST:event_cmbCajaItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
         
    }//GEN-LAST:event_formWindowOpened

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cmbCaja;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelCentro;
    private javax.swing.JPanel panelInferior;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JTable tblDetalleCaja;
    // End of variables declaration//GEN-END:variables

    public void VerDatos(int idcaja) throws ClassNotFoundException, SQLException {
        try {
            int nf = tblDetalleCaja.getRowCount();
            for (int i = 0; i < nf; i++) {
                dtm.removeRow(0);
            }
            for (Object[] o : CRUD_DetalleCaja.SadosCajaMoneda(idcaja)) {
                dtm.addRow(o);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }
    public void CargarComboCajas() throws ClassNotFoundException, SQLException {
        
        cmbCaja.removeAllItems();
        for (Caja c : CRUD_Caja.ListarporCaja()) {
            cmbCaja.addItem(c.getDescripcion());
        }
        
    }
     public void getModeloTabla(){
        tblDetalleCaja.setModel(dtm);        
        //color de los bordes de las celdas
        tblDetalleCaja.setGridColor(new java.awt.Color(135, 206, 250)); 
        //tamaÃ±o de columnas
        
        ocultarcolumna(0, tblDetalleCaja);
        tblDetalleCaja.getColumnModel().getColumn(1).setPreferredWidth(90);
        tblDetalleCaja.getColumnModel().getColumn(2).setPreferredWidth(35);
        tblDetalleCaja.getColumnModel().getColumn(3).setPreferredWidth(20);
        ocultarcolumna(4, tblDetalleCaja);
        ocultarcolumna(5, tblDetalleCaja);
        //altura de filas
        tblDetalleCaja.setRowHeight(25);
        //se asigna el nuevo CellRenderer a cada columna segun su contenido
        tblDetalleCaja.getColumnModel().getColumn( 0 ).setCellRenderer( new CellRenderer("text") );
        tblDetalleCaja.getColumnModel().getColumn( 1 ).setCellRenderer( new CellRenderer("text") );
        tblDetalleCaja.getColumnModel().getColumn( 2 ).setCellRenderer( new CellRenderer("numero") );
        //tblDetalleCaja.getColumnModel().getColumn( 3 ).setCellRenderer( new CellRenderer("text") );
        tblDetalleCaja.getColumnModel().getColumn( 4 ).setCellRenderer( new CellRenderer("text") );
        tblDetalleCaja.getColumnModel().getColumn( 5 ).setCellRenderer( new CellRenderer("text") );
        
       
        tblDetalleCaja.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(cargarComboMoneda()));
        //Se asigna nuevo header a la tabla
        JTableHeader jtableHeader = tblDetalleCaja.getTableHeader();
        jtableHeader.setDefaultRenderer(new HeaderCellRenderer());
        tblDetalleCaja.setTableHeader(  jtableHeader );
        
    }
    public void ocultarcolumna(int columna, JTable tabla){
         tabla.getColumnModel().getColumn(columna).setMaxWidth(0);
         tabla.getColumnModel().getColumn(columna).setMinWidth(0);
         tabla.getColumnModel().getColumn(columna).setPreferredWidth(0);
         tabla.getColumnModel().getColumn(columna).setResizable(false);
    }
    private JComboBox cargarComboMoneda(){
        JComboBox comboBox = new JComboBox();
        try {
                comboBox.removeAllItems();
                for (Moneda m : CRUD_Moneda.ListaMonedas()) {
                comboBox.addItem(m.getNombre());
                }
        } catch (Exception e) {
        } 
        return comboBox;
    }
}
