/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sis_exchange;

import Controlador.CRUD_Caja;
import Controlador.CRUD_CajaCierre;
import Controlador.CRUD_CajaMovimiento;
import Controlador.CRUD_DetalleCaja;
import Controlador.CRUD_Moneda;
import Entidades.Caja;
import Entidades.CajaCierre;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import Utilidades.CellRenderer;
import Utilidades.HeaderCellRenderer;
import Utilidades.myeditor;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author EDWARD
 */
public final class FormCierreCajaDia extends javax.swing.JDialog {

    public DefaultTableModel dtm = null;
    public JCheckBox jcheck = new JCheckBox();
    public JButton jButton = new JButton();
    public static int idCaja = 0;
    public static double total = 0;
    private TableRowSorter trsFiltro;
    private String moneda = "BOLIVIANOS";
    public int nerror = 0;
    public boolean sw;
    public int cont = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**
     * Creates new form FICursos
     */
    public FormCierreCajaDia(java.awt.Frame parent, boolean modal) {
        super(parent,modal);
        initComponents();
        dtm = (DefaultTableModel) tblDetalleCaja.getModel();
        getModeloTablaSaldo();
        try {

            VerDatosSaldo(FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja));
            saldosCaja();
            saldoTotalBs();
            sw = false;

        } catch (Exception e) {
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetalleCaja = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSaldoIngreso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSaldoEgreso = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTotalSistema = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setTitle("CERRAR CAJA");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("SALDOS DE CAJA POR MONEDA"));

        tblDetalleCaja.setBackground(new java.awt.Color(153, 255, 255));
        tblDetalleCaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MONEDA", "SALDO INICIAL", "COMPRAS", "VENTAS", "DEVITO", "CREDITO", "SALDO SISTEMA", "TC", "SALDO BOLIVIANOS", "SALDO EN CAJA", "DIFERENCIA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalleCaja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDetalleCajaMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleCajaMouseClicked(evt);
            }
        });
        tblDetalleCaja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblDetalleCajaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblDetalleCaja);
        if (tblDetalleCaja.getColumnModel().getColumnCount() > 0) {
            tblDetalleCaja.getColumnModel().getColumn(5).setResizable(false);
            tblDetalleCaja.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnCerrar.setText("CERRAR CAJA");
        btnCerrar.setEnabled(false);
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("TOTAL INGRESOS DE CAJA:");

        txtSaldoIngreso.setBackground(new java.awt.Color(0, 0, 102));
        txtSaldoIngreso.setForeground(new java.awt.Color(255, 255, 255));
        txtSaldoIngreso.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSaldoIngreso.setText("0.0");
        txtSaldoIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaldoIngresoActionPerformed(evt);
            }
        });

        jLabel2.setText("TOTAL GASTOS DE CAJA:");

        txtSaldoEgreso.setBackground(new java.awt.Color(0, 0, 102));
        txtSaldoEgreso.setForeground(new java.awt.Color(255, 255, 255));
        txtSaldoEgreso.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSaldoEgreso.setText("0.0");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setText("TOTAL EN CAJA EN MONEDA NACIONAL:");

        txtTotalSistema.setEditable(false);
        txtTotalSistema.setBackground(new java.awt.Color(0, 0, 0));
        txtTotalSistema.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txtTotalSistema.setForeground(new java.awt.Color(255, 255, 255));
        txtTotalSistema.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalSistema.setText("0.0");
        txtTotalSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalSistemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(228, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(178, 178, 178)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSaldoEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaldoIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTotalSistema, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSaldoIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtSaldoEgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalSistema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCerrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnCerrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            dtm = (DefaultTableModel) tblDetalleCaja.getModel();
            //VerDatos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void tblDetalleCajaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleCajaMouseClicked
        // TODO add your handling code here:
        int fila = 0;
        fila = tblDetalleCaja.getSelectedRow();
        myeditor.moneda = (String) tblDetalleCaja.getValueAt(fila, 0);
        System.out.println("Eleccion:" + myeditor.moneda);
    }//GEN-LAST:event_tblDetalleCajaMouseClicked

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        boolean estado;
        CajaCierre ccierre = new CajaCierre();
        int resp = JOptionPane.showConfirmDialog(this, "¿Esta seguro de cerrar la caja?", "Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (resp == 0) {

            if (guardarsaldos(ccierre)) {
                //Actualizamos los valores de la caja
                try {
                    //Llamamos al procedimiento almacenado y actualizamos los sados
                    estado = CRUD_DetalleCaja.pralmSaldo(FORM_PRINCIPAL.idcaja, 0);
                    //Insertamos los saldos en la tabla cierre de caja
                    java.util.Date date = new java.util.Date();
                    java.sql.Timestamp fecha = new java.sql.Timestamp(date.getTime());
                    Caja caj = new Caja();
                    caj.setIdCaja(FORM_PRINCIPAL.idcaja);
                    caj.setSaldoFinal(Double.parseDouble(txtTotalSistema.getText().replace(",", "")));
                    caj.setFechaCierre(fecha);
                    caj.setEstado(0);

                    if (CRUD_Caja.ActualizarCajaCierre(caj)) {
                        dispose();
                        FORM_PRINCIPAL.cerrar();
                    } else {
                        System.err.println("No se actualizo la caja");
                    }
                    this.dispose();

                } catch (Exception e) {
                    System.out.println("Error:" + e);
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo cerrar la caja, contactese con su administrador.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void txtSaldoIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaldoIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaldoIngresoActionPerformed

    private void txtTotalSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalSistemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalSistemaActionPerformed

    private void tblDetalleCajaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleCajaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDetalleCajaMousePressed

    private void tblDetalleCajaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDetalleCajaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDetalleCajaKeyPressed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public static javax.swing.JTable tblDetalleCaja;
    private javax.swing.JTextField txtSaldoEgreso;
    private javax.swing.JTextField txtSaldoIngreso;
    private javax.swing.JTextField txtTotalSistema;
    // End of variables declaration//GEN-END:variables

    public void VerDatosSaldo(int idcaja, Timestamp fecha) throws ClassNotFoundException, SQLException {
        try {
            int nf = tblDetalleCaja.getRowCount();
            for (int i = 0; i < nf; i++) {
                dtm.removeRow(0);
            }
            for (Object[] lista : CRUD_DetalleCaja.ListaporMontos(idcaja, fecha)) {
                dtm.addRow(lista);
            }
        } catch (Exception e) {
            System.out.println(e.toString());
            //JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }

    public void getModeloTablaSaldo() {
        tblDetalleCaja.setModel(dtm);

        //color de los bordes de las celdas
        tblDetalleCaja.setGridColor(new java.awt.Color(214, 213, 208));
        //tamaño de columnas
        tblDetalleCaja.getColumnModel().getColumn(0).setPreferredWidth(60);
        ocultarcolumna(1, tblDetalleCaja);
        ocultarcolumna(2, tblDetalleCaja);
        ocultarcolumna(3, tblDetalleCaja);
        ocultarcolumna(4, tblDetalleCaja);
        ocultarcolumna(5, tblDetalleCaja);
        tblDetalleCaja.getColumnModel().getColumn(6).setPreferredWidth(50);
        ocultarcolumna(7, tblDetalleCaja);
        ocultarcolumna(8, tblDetalleCaja);
        tblDetalleCaja.getColumnModel().getColumn(9).setPreferredWidth(50);
        tblDetalleCaja.getColumnModel().getColumn(10).setPreferredWidth(50);

        //altura de filas
        tblDetalleCaja.setRowHeight(20);
        //se asigna el nuevo CellRenderer a cada columna segun su contenido
        tblDetalleCaja.getColumnModel().getColumn(0).setCellRenderer(new CellRenderer("text"));
        tblDetalleCaja.getColumnModel().getColumn(1).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(2).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(3).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(4).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(5).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(6).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(7).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(8).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(9).setCellRenderer(new CellRenderer("numero"));
        tblDetalleCaja.getColumnModel().getColumn(10).setCellRenderer(new CellRenderer("numero"));

        JTableHeader jtableHeader = tblDetalleCaja.getTableHeader();
        jtableHeader.setDefaultRenderer(new HeaderCellRenderer());
        tblDetalleCaja.setTableHeader(jtableHeader);

        tblDetalleCaja.getModel().addTableModelListener(new TableModelListener() {
            // para evitar concurrencias
            boolean active = false;

            // evento general
            public void tableChanged(TableModelEvent e) {
                // si no tiene una ejecucion y hemos modificado
                if (!active && e.getType() == TableModelEvent.UPDATE) {
                    active = true;
                    //JOptionPane.showMessageDialog(tblDetalleCaja, "prueba 1");
                    calcularDiferencia();
                    active = false;
                    if (cont == tblDetalleCaja.getRowCount()) {
                        btnCerrar.setEnabled(sw);
                    }
                }
            }

        });

        /*tblDetalleCaja.addKeyListener(new KeyListener() {
            public void keyTyped(KeyEvent e) {
                //operaciondiferencia();
            }

            public void keyPressed(KeyEvent e) {
               
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    operaciondiferencia();
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });*/
    }

    public void ocultarcolumna(int columna, JTable tabla) {
        tabla.getColumnModel().getColumn(columna).setMaxWidth(0);
        tabla.getColumnModel().getColumn(columna).setMinWidth(0);
        tabla.getColumnModel().getColumn(columna).setPreferredWidth(0);
        tabla.getColumnModel().getColumn(columna).setResizable(false);
    }

    public void mostrarcolumna(int columna, JTable tabla, int tamano) {
        tabla.getColumnModel().getColumn(columna).setMaxWidth(tamano);
        tabla.getColumnModel().getColumn(columna).setMinWidth(tamano);
        tabla.getColumnModel().getColumn(columna).setPreferredWidth(tamano);
        tabla.getColumnModel().getColumn(columna).setResizable(false);
    }

    private void verificarSaldos() {

        double saldo1, saldo2;
        nerror = 0;
        String s1, s2;
        try {
            for (int i = 0; i < tblDetalleCaja.getRowCount(); i++) {
                s1 = (String) tblDetalleCaja.getValueAt(i, 1);
                s2 = (String) tblDetalleCaja.getValueAt(i, 4);
                if (s1 == null || s2 == null) {
                    saldo1 = 0;
                    saldo2 = 0;
                } else {
                    saldo1 = Double.parseDouble(s1.replace(",", ""));
                    saldo2 = Double.parseDouble(s2.replace(",", ""));
                    System.out.println("Saldos:" + saldo1 + ";" + saldo2);
                    if (saldo1 == saldo2) {
                        tblDetalleCaja.setValueAt(true, i, 6);
                        System.out.println("verdad");
                    } else {
                        tblDetalleCaja.setValueAt(false, i, 6);
                        System.out.println("falso");
                        nerror++;
                    }
                }

            }
        } catch (Exception e) {
            System.err.println("Erro:" + e);
        }
    }

    private void saldoTotalBs() {
        double monto = 0;
        double tpc = 0;
        double saldo = 0;
        String mont = "";
        try {
            for (int i = 0; i < tblDetalleCaja.getRowCount(); i++) {
                mont = String.valueOf(tblDetalleCaja.getValueAt(i, 8));
                //System.out.println("Monto:"+mont);
                if (mont == null) {
                    monto = 0;
                    // System.out.println("Correcto");
                } else {
                    //System.out.println("Incorrecto");
                    //monto = Double.parseDouble(mont.replace(",", ""));
                    monto = Double.parseDouble(mont);
                }
                saldo += monto;
            }
            DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
            simbolo.setDecimalSeparator('.');
            simbolo.setGroupingSeparator(',');
            DecimalFormat formatea = new DecimalFormat("###,###.##", simbolo);
            formatea.setMinimumFractionDigits(2);
            txtTotalSistema.setText(formatea.format(saldo));
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    private boolean guardarsaldos(CajaCierre ccierre) {
        int idsucursal, idmoneda;
        String s = "", m = "";
        double saldo;
        java.util.Date date = new java.util.Date();
        java.sql.Timestamp fecha = new java.sql.Timestamp(date.getTime());
        boolean estado = false;
        try {
            for (int i = 0; i < tblDetalleCaja.getRowCount(); i++) {
                s = String.valueOf(tblDetalleCaja.getValueAt(i, 6));
                m = String.valueOf(tblDetalleCaja.getValueAt(i, 0));
                saldo = Double.parseDouble(s);
                idmoneda = CRUD_Moneda.ObtenerId(m);
                idsucursal = 1;

                ccierre.setFecha(fecha);
                ccierre.setSaldo(saldo);
                ccierre.setIdSucursal(idsucursal);
                ccierre.setIdCaja(FORM_PRINCIPAL.idcaja);
                ccierre.setIdMoneda(idmoneda);
                estado = CRUD_CajaCierre.Guardar(ccierre);
                estado = CRUD_DetalleCaja.ActualizarMontoMoneda(saldo, idmoneda, FORM_PRINCIPAL.idcaja);
            }
        } catch (Exception e) {
            System.out.println("Error:" + e);
        }
        return estado;
    }

    private void calcularDiferencia() {
        String valor = null;
        try {
            valor = String.valueOf(Double.parseDouble(String.valueOf(tblDetalleCaja.getValueAt(tblDetalleCaja.getSelectedRow(), 6))) - Double.parseDouble(String.valueOf(tblDetalleCaja.getValueAt(tblDetalleCaja.getSelectedRow(), 9))));
            if (valor.equals("0.0")) {
                sw = true;
                cont++;
            } else {
                sw = false;
            }
            System.out.println("Valor:" + valor);
            tblDetalleCaja.setValueAt(valor, tblDetalleCaja.getSelectedRow(), 10);
        } catch (Exception e) {
        }

        //return datos;
    }

    private void saldosCaja() {

        try {
            // Aplicamos formato a los numeros
            DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
            simbolo.setDecimalSeparator('.');
            simbolo.setGroupingSeparator(',');
            DecimalFormat formatea = new DecimalFormat("###,###.##", simbolo);
            formatea.setMinimumFractionDigits(2);
            // Recuperamos el saldo de ingreso
            double valor1 = CRUD_CajaMovimiento.saldoIngresoCaja(FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja));
            txtSaldoIngreso.setText(formatea.format(CRUD_CajaMovimiento.saldoIngresoCaja(FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja))));
            //Recuperamos el saldo de gastos
            double valor2 = CRUD_CajaMovimiento.saldoGastoCaja(FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja));
            txtSaldoEgreso.setText(formatea.format(CRUD_CajaMovimiento.saldoGastoCaja(FORM_PRINCIPAL.idcaja, CRUD_Caja.getFechaApertura(FORM_PRINCIPAL.idcaja))));
            System.out.println("Saldos - - - - - -");
        } catch (Exception e) {
        }

    }
}
